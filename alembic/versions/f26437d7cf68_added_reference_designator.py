"""Added reference designator

Revision ID: f26437d7cf68
Revises: fcc0d738c703
Create Date: 2016-05-19 16:42:26.543666

"""

# revision identifiers, used by Alembic.
revision = 'f26437d7cf68'
down_revision = 'fcc0d738c703'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    # Create the new reference_designator table
    op.create_table('reference_designator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )

    # Create new reference designator rows for all existing reference designators
    # In the deployed_stream and port_count tables
    op.execute('''
        INSERT INTO reference_designator (name)
        SELECT DISTINCT reference_designator
        FROM (SELECT reference_designator
              FROM deployed_stream
              UNION SELECT reference_designator
              FROM port_count)
        AS temp''')

    # Migrate existing deployed_stream rows
    op.add_column(u'deployed_stream', sa.Column('reference_designator_id', sa.Integer()))
    op.execute('UPDATE deployed_stream SET reference_designator_id = rd.id FROM reference_designator rd WHERE rd.name = reference_designator')

    # add the non-nullable constraint to the reference_designator_id column
    op.alter_column('deployed_stream', 'reference_designator_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # Drop and re-create constraints, then drop the reference_designator column
    op.drop_constraint(u'deployed_stream_reference_designator_expected_stream_id_key', 'deployed_stream', type_='unique')
    op.create_unique_constraint(None, 'deployed_stream', ['reference_designator_id', 'expected_stream_id'])
    op.create_foreign_key(None, 'deployed_stream', 'reference_designator', ['reference_designator_id'], ['id'])
    op.drop_column(u'deployed_stream', 'reference_designator')

    # Migrate the port_count data
    op.add_column(u'port_count', sa.Column('reference_designator_id', sa.Integer()))
    op.execute('UPDATE port_count SET reference_designator_id = rd.id FROM reference_designator rd WHERE rd.name = reference_designator')

    # add the non-nullable constraint to the reference_designator_id column
    op.alter_column('port_count', 'reference_designator_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # Create the foreign key restraint, then drop the reference_designator column
    op.create_foreign_key(None, 'port_count', 'reference_designator', ['reference_designator_id'], ['id'])
    op.drop_column(u'port_count', 'reference_designator')


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column(u'port_count', sa.Column('reference_designator', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'port_count', type_='foreignkey')
    op.drop_column(u'port_count', 'reference_designator_id')
    op.add_column(u'deployed_stream', sa.Column('reference_designator', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'deployed_stream', type_='foreignkey')
    op.drop_constraint(None, 'deployed_stream', type_='unique')
    op.create_unique_constraint(u'deployed_stream_reference_designator_expected_stream_id_key', 'deployed_stream', ['reference_designator', 'expected_stream_id'])
    op.drop_column(u'deployed_stream', 'reference_designator_id')
    op.drop_table('reference_designator')
    ### end Alembic commands ###
